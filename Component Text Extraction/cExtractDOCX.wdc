#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : cExtractDOCX
 major_version : 28
 minor_version : 0
 type : 4
 description : ""
 subtype : 0
class :
 identifier : 0x18bc0a24006c1e2f
 internal_properties : CAAAAAgAAAB2/vstTMCJbS/hlxjFxirSqKvCUuv8YxgpWyl7S3iA
 code_elements :
  internal_properties : CAAAAAgAAACRuDEHqvIwWgMLCTHtQROM/labqU0ka2w5/rIIf05p5M2WsXLUlnH+tIblH3OrmyHoLgrvMOz60Yi7vVm8mUSWnRkUoMpJwZ8Hlk71syBCeijJKlQcStrR0fX9wZR2vfKT0M2Lsa9Af5C8l0AiQuMCuH3YkyJYF/T1q/ojUpefGSLLHvfXXi5rzBI8t8LUoR2tAbWaA5uheX6G/+S13PV1CFRh4zd7hNTbiyL159TAOW7hOxQzQgMZYH8y5kFoJ3FVgbrH7Knh8szNYUTnILHfc5uR
  type_code : 10
  p_codes :
   -
     internal_properties : CAAAAAgAAACBseCG3MHi9geYFd/p+e4g3nlM85FEgShFevzh4Z/SvLslVQu8c/BcCrzKms3LaRf7hMQNko12e81MsNCvOCw4SjwKvs0ckULnKGYrU5XAllT5rDxX3QpBy6C47IGvtoZecAXSmfseY3u9aiQz0tDGQ9nJxwoz0EzZgoduhil2PfLcck7/G7mW3/OWHGherm0=
     code : |1+
      
      CONSTANT
      	EXTENSION        = ".docx"
      	RELATION         = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument"" Target="""
      	RELATION_FILE = "_rels\.rels"
      END
      
      // 
      // Class used to retrieve the text found in a Office Word 2007 document (.docx)
      //
      cExtractDOCX is Class
      	inhérits of cExtractor
      END
      
     type : 131072
  procedures :
   -
     name : Manufacturer
     procedure_id : 1782310702274125359
     type_code : 27
     code : |1+
      // Summary: <specify the action of the procedure>
      // Syntax:
      // cExtractDOCX()
      //
      // Parameters:
      //	None
      // Return value:
      // 	None
      //
      // Example:
      // Indicate an example.
      //
      PROCEDURE Constructor()
      
     type : 589824
   -
     name : Destructor_
     procedure_id : 1782310702274190895
     type_code : 28
     code : |1+
      // Summary: <specify the action of the procedure>
      // Syntax:
      // cExtractDOCX ()
      //
      // Parameters:
      //	None
      // Return value:
      // 	None
      //
      // Example:
      // Indicate an example.
      //
      PROCEDURE Destructor()
      
     type : 655360
   -
     name : ExtractText
     internal_properties : CAAAAAgAAABnfom9+LvmESo80CKv468dzRmp8o0L76b05U3Ttz688WQ0Dfvz/f2wczTd5U/6qpudqES1uSeRFx1ZbKteiyZPAuJif0SG+QKtqpbzznNV8q7eVNIQCtJOPQEywPA3ByESTu/Coo9lYNNeHruyAtFcuEMFpxTcz3Z+6Du4YXM42yvHXa3l8wCfElePurWDZ3YGHTFQdepxijmB4owGVcOJf552RvMYa86nF4eDZ1hdmPeb0Gtg9a2g04MmUokMR+BxhylN3bEMAn1DIgOBbOlWrmJtFwbxt7j5UPbSixtGmT6aEu8c4slVPBCjVHML45d+Mshehl5q4y5GOQpyYRkhgeqvLaw+Fc407vMBzgoHx0Tz16W5HyrC9gs2RYGTn4c8gGfDqiN0
     procedure_id : 1782310702274256431
     type_code : 12
     code : |1-
      // Summary: This procedure extracts and returns the text found in a Word 2007 document
      // Syntax:
      //[ <Result> = ] ExtractText (<sPath> is string [, <sOutput>])
      //
      // Parameters:
      //	sPath (string): Path of the Word 2007 file
      //	sOutput: Text of the Word 2007 file
      // Return value:
      // 	boolean:    True if everything is OK, False otherwise
      //// Example:
      // ExtractText("C:/study.docx")
      //// Automatic process of exceptions:   run CASE EXCEPTION:
      //
      
      PROCEDURE VIRTUAL ExtractText(sPath is string,sExit="")
      
      // Variables
      nOpenArchive   is int
      sText          is string
      sTextPath    is string
      sResult       is string
      nStartPosition  is int
      nEndPosition    is int
      nEndTagBeginning is int
      sArchiveName     is string
      
      // Initialization
      sArchiveName = "ArchiveDOCX_"+Now()
      
      // Specify the file
      IF sPath <> "" THEN
      	:_sPath = sPath
      END
      
      // Is it an Office 2007 file?
      IF fExtractPath(:_sPath,fExtension) <> ::EXTENSION THEN
      	:_sError = <§$0000§>
      	RESULT False
      END
      
      // Unzip the file
      nOpenArchive = zipOpen(sArchiveName, :_sPath)
      IF nOpenArchive = 0 THEN
      	// Extract the file in memory used to indicate the location of the text
      	sText = zipExtractFile(sArchiveName, ::RELATION_FILE, zipInMemory)
      ELSE
      	:_sError = <§$0001§>+:_sPath
      	RESULT False
      END
      
      // Retrieve the location in the ZIP of the file containing the text
      nStartPosition = Position(sText,::RELATION)
      IF nStartPosition <> 0 THEN
      	// Retrieve the path
      	nStartPosition += Length(::RELATION)
      	nEndPosition = Position(sText,"""",nStartPosition) - 1
      	sTextPath = sText[[nStartPosition TO nEndPosition]]
      	sTextPath = Replace(sTextPath,"/","\")
      	
      	// Extraction in memory of the document
      	sText = zipExtractFile(sArchiveName, sTextPath, zipInMemory)
      ELSE
      	:_sError = <§$0002§>
      	RESULT False
      END
      
      // Close the zip file
      zipClose(sArchiveName)
      
      // Loop and extract the values found between the tags that indicate some text
      nStartPosition = Position(sText,"<w:t")
      WHILE nStartPosition <> 0
      	// Define the end of the start tag (its size may change)
      	nEndTagBeginning = Position(sText,">",nStartPosition) 
      	
      	// Define the end of the text
      	nEndPosition = Position(sText,"</w:t>",nStartPosition)
      
      	// Next tag
      	nStartPosition = Position(sText,"<w:t",nStartPosition+1)
      	
      	// Retrieve the text as the start and end positions are identified
      	sResult += sText[[nEndTagBeginning+1 TO nEndPosition-1]]
      	
      	// Is a line skip required?
      	IF Position(sText,"</w:p>",nEndPosition) < nStartPosition THEN
      		sResult += CR	
      	END
      END
      
      // Specify the extracted text
      :_sText = XMLToText(UTF8ToString(sResult))
      
      RESULT True
      
      CASE EXCEPTION:
      	:_sError = ErrorInfo(errFullDetails)
      	RESULT False
     type : 458752
   -
     name : getExtension
     internal_properties : CAAAAAgAAAB/QxmAHc0G3ZiNhx7bE0wMolVFV3YVWfy9sGYv2rOXrI77y3+TaiWe+MIxT70/Gq2D8i60e9DXVU72lxl/lO3sgDiaw52uz0rXrGGx95m+kT43SOumyH/w7zrKcbTANH0fWgiHab9pvsO48ERjTHcGiw18xv23ig0HGo6/PpLYEUTcSdIQ+CKj0UBlVZN0XYOu7XEE
     procedure_id : 1782315096024529369
     type_code : 12
     code : |1+
      // Summary: Returns the extension of a Word 2007 document
      // Syntax:
      //[ <Result> = ] getExtension ()
      //
      // Parameters:
      //	None
      // Return value:
      // 	string: //  	 	None
      //// Example:
      // Indicate an example.
      //
      PROCEDURE VIRTUAL getExtension()
      
      RESULT ::EXTENSION
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : CAAAAAgAAACVGQgYbalU7DKC3oH4ItDrjtcTHXXV/EuH8q0IbhyQlw==
  original_name : CClasse1
resources :
 string_res :
  identifier : 0x18bbb9ea0015bbcd
  internal_properties : CAAAAAgAAACm76HWfKGWp33VjXInA4cRlqArlgTTA862QGt72W2ld5Y=
  strings :
   -
     text :
      en-GB : This file is not a Word 2007 file
     index : 0
   -
     text :
      en-GB : "Unable to unzip the archive "
     index : 1
   -
     text :
      en-GB : Unable to define the file containing the text in the Word 2007 document
     index : 2
custom_note :
 internal_properties : CAAAAAgAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
